{".eslintrc.js":{"unit":"standard","comp":".eslintrc.js","addedCode":{"lintRules":"\n        \"no-console\": [\"error\"],\n        \"@typescript-eslint/no-var-requires\": \"off\",\n        \"@typescript-eslint/explicit-module-boundary-types\": \"off\",\n        \"@typescript-eslint/ban-types\": \"off\",\n        \"@typescript-eslint/no-explicit-any\":\"off\",\n        \"@typescript-eslint/ban-ts-comment\": \"off\"\n        "},"replacedCode":{},"removedCode":{}},".gitignore":{"unit":"standard","comp":".gitignore","addedCode":{"extra":"\n"},"replacedCode":{},"removedCode":{}},".nycrc.yml":{"unit":"standard","comp":".nycrc.yml","addedCode":{"testCoverageThresholds":"\ncheck-coverage: true\nbranches: 50\nlines: 60\nfunctions: 40\nstatements: 60\n"},"replacedCode":{},"removedCode":{}},"README.md":{"unit":"standard","comp":"README.md","addedCode":{"beginning":"\n","description":"\nbash-fool\n======\nrun a sequence of bash commands as specified by a json\n","afterDescription":"\n","badges":"\n\n[//]: # ( ns__start_section usageSection )\n\n[![codecov](https://codecov.io/gh/YizYah/bash-fool/branch/main/graph/badge.svg?token=019QO4XK1Z)](https://codecov.io/gh/YizYah/bash-fool)\n[![Version](https://img.shields.io/npm/v/bash-fool.svg)](https://npmjs.org/package/bash-fool)\n[![Downloads/week](https://img.shields.io/npm/dw/bash-fool.svg)](https://npmjs.org/package/bash-fool)\n[![License](https://img.shields.io/npm/l/bash-fool.svg)](https://github.com/YizYah/bash-fool/blob/master/package.json)\n\n[![Geenee](https://img.shields.io/badge/maintained%20by-geenee-brightgreen)](https://npmjs.org/package/geenee)\n[![Template](https://img.shields.io/badge/template-ts--packrat-blue)](https://npmjs.org/package/ts-packrat)\n","APIIntro":"\n# API\n","constantsIntro":"\n## General Constants and Commands\n"},"replacedCode":{},"removedCode":{}},"src/index.ts":{"unit":"standard","comp":"src/index.ts","addedCode":{"beginning":"\nimport { bashFool } from './custom';\n","export":"\nmodule.exports = bashFool\n"},"replacedCode":{},"removedCode":{}},"test/index.test.ts":{"unit":"standard","comp":"test/index.test.ts","addedCode":{"customImports":"\n","general":"\ntest('general', t => {\n  // replace with whatever you'd like.  To start over with the default, remove everything including the\n  t.not(typeof output, \"undefined\")\n});\n"},"replacedCode":{},"removedCode":{}}}
